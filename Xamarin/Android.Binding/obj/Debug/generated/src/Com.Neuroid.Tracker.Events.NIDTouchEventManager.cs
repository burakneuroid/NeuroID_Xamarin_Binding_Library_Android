//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Neuroid.Tracker.Events {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.neuroid.tracker.events']/class[@name='NIDTouchEventManager']"
	[global::Android.Runtime.Register ("com/neuroid/tracker/events/NIDTouchEventManager", DoNotGenerateAcw=true)]
	public sealed partial class NIDTouchEventManager : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/neuroid/tracker/events/NIDTouchEventManager", typeof (NIDTouchEventManager));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal NIDTouchEventManager (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.neuroid.tracker.events']/class[@name='NIDTouchEventManager']/constructor[@name='NIDTouchEventManager' and count(parameter)=1 and parameter[1][@type='android.view.ViewGroup']]"
		[Register (".ctor", "(Landroid/view/ViewGroup;)V", "")]
		public unsafe NIDTouchEventManager (global::Android.Views.ViewGroup viewParent) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/view/ViewGroup;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((viewParent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) viewParent).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (viewParent);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.neuroid.tracker.events']/class[@name='NIDTouchEventManager']/method[@name='detectView' and count(parameter)=2 and parameter[1][@type='android.view.MotionEvent'] and parameter[2][@type='long']]"
		[Register ("detectView", "(Landroid/view/MotionEvent;J)Landroid/view/View;", "")]
		public unsafe global::Android.Views.View DetectView (global::Android.Views.MotionEvent motionEvent, long timeMills)
		{
			const string __id = "detectView.(Landroid/view/MotionEvent;J)Landroid/view/View;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((motionEvent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) motionEvent).Handle);
				__args [1] = new JniArgumentValue (timeMills);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (motionEvent);
			}
		}

	}
}

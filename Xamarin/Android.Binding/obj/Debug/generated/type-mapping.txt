com/neuroid/tracker/BuildConfig = Com.Neuroid.Tracker.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  GIT_HASH = GitHash
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_NAME = VersionName
com/neuroid/tracker/callbacks/AxisData = Com.Neuroid.Tracker.Callbacks.AxisData
  <init>(IFFF)V = .ctor(int, float, float, float)
  getAxisX()F = AxisX
  getAxisY()F = AxisY
  getAxisZ()F = AxisZ
  getType()I = Type
com/neuroid/tracker/callbacks/NIDActivityCallbacks = Com.Neuroid.Tracker.Callbacks.NIDActivityCallbacks
  <init>()V = .ctor()
  forceStart(Landroid/app/Activity;)V = ForceStart(Android.App.Activity)
  onActivityCreated(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivityCreated(Android.App.Activity, Android.OS.Bundle)
  onActivityDestroyed(Landroid/app/Activity;)V = OnActivityDestroyed(Android.App.Activity)
  onActivityPaused(Landroid/app/Activity;)V = OnActivityPaused(Android.App.Activity)
  onActivityResumed(Landroid/app/Activity;)V = OnActivityResumed(Android.App.Activity)
  onActivitySaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivitySaveInstanceState(Android.App.Activity, Android.OS.Bundle)
  onActivityStarted(Landroid/app/Activity;)V = OnActivityStarted(Android.App.Activity)
  onActivityStopped(Landroid/app/Activity;)V = OnActivityStopped(Android.App.Activity)
com/neuroid/tracker/callbacks/NIDContextMenuCallbacks = Com.Neuroid.Tracker.Callbacks.NIDContextMenuCallbacks
  <init>(Landroid/view/ActionMode$Callback;)V = .ctor(Android.Views.ActionMode.ICallback)
  onActionItemClicked(Landroid/view/ActionMode;Landroid/view/MenuItem;)Z = OnActionItemClicked(Android.Views.ActionMode, Android.Views.IMenuItem)
  onCreateActionMode(Landroid/view/ActionMode;Landroid/view/Menu;)Z = OnCreateActionMode(Android.Views.ActionMode, Android.Views.IMenu)
  onDestroyActionMode(Landroid/view/ActionMode;)V = OnDestroyActionMode(Android.Views.ActionMode)
  onPrepareActionMode(Landroid/view/ActionMode;Landroid/view/Menu;)Z = OnPrepareActionMode(Android.Views.ActionMode, Android.Views.IMenu)
com/neuroid/tracker/callbacks/NIDGlobalEventCallback = Com.Neuroid.Tracker.Callbacks.NIDGlobalEventCallback
  <init>(Landroid/view/Window$Callback;Lcom/neuroid/tracker/events/NIDTouchEventManager;Landroid/view/View;)V = .ctor(Android.Views.Window.ICallback, Com.Neuroid.Tracker.Events.NIDTouchEventManager, Android.Views.View)
  dispatchGenericMotionEvent(Landroid/view/MotionEvent;)Z = DispatchGenericMotionEvent(Android.Views.MotionEvent)
  dispatchKeyEvent(Landroid/view/KeyEvent;)Z = DispatchKeyEvent(Android.Views.KeyEvent)
  dispatchKeyShortcutEvent(Landroid/view/KeyEvent;)Z = DispatchKeyShortcutEvent(Android.Views.KeyEvent)
  dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)Z = DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)
  dispatchTouchEvent(Landroid/view/MotionEvent;)Z = DispatchTouchEvent(Android.Views.MotionEvent)
  dispatchTrackballEvent(Landroid/view/MotionEvent;)Z = DispatchTrackballEvent(Android.Views.MotionEvent)
  onActionModeFinished(Landroid/view/ActionMode;)V = OnActionModeFinished(Android.Views.ActionMode)
  onActionModeStarted(Landroid/view/ActionMode;)V = OnActionModeStarted(Android.Views.ActionMode)
  onAttachedToWindow()V = OnAttachedToWindow()
  onContentChanged()V = OnContentChanged()
  onCreatePanelMenu(ILandroid/view/Menu;)Z = OnCreatePanelMenu(int, Android.Views.IMenu)
  onCreatePanelView(I)Landroid/view/View; = OnCreatePanelView(int)
  onDetachedFromWindow()V = OnDetachedFromWindow()
  onGlobalFocusChanged(Landroid/view/View;Landroid/view/View;)V = OnGlobalFocusChanged(Android.Views.View, Android.Views.View)
  onGlobalLayout()V = OnGlobalLayout()
  onMenuItemSelected(ILandroid/view/MenuItem;)Z = OnMenuItemSelected(int, Android.Views.IMenuItem)
  onMenuOpened(ILandroid/view/Menu;)Z = OnMenuOpened(int, Android.Views.IMenu)
  onPanelClosed(ILandroid/view/Menu;)V = OnPanelClosed(int, Android.Views.IMenu)
  onPreparePanel(ILandroid/view/View;Landroid/view/Menu;)Z = OnPreparePanel(int, Android.Views.View, Android.Views.IMenu)
  onSearchRequested()Z = OnSearchRequested()
  onSearchRequested(Landroid/view/SearchEvent;)Z = OnSearchRequested(Android.Views.SearchEvent)
  onWindowAttributesChanged(Landroid/view/WindowManager$LayoutParams;)V = OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)
  onWindowFocusChanged(Z)V = OnWindowFocusChanged(bool)
  onWindowStartingActionMode(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode; = OnWindowStartingActionMode(Android.Views.ActionMode.ICallback)
  onWindowStartingActionMode(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode; = OnWindowStartingActionMode(Android.Views.ActionMode.ICallback, Android.Views.ActionModeType)
com/neuroid/tracker/callbacks/NIDSensorData = Com.Neuroid.Tracker.Callbacks.NIDSensorData
  <init>(Ljava/lang/String;Lcom/neuroid/tracker/callbacks/NIDSensorStatus;Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;)V = .ctor(string, Com.Neuroid.Tracker.Callbacks.NIDSensorStatus, Java.Lang.Float, Java.Lang.Float, Java.Lang.Float)
  getAxisX()Ljava/lang/Float; = AxisX
  setAxisX(Ljava/lang/Float;)V = AxisX
  getAxisY()Ljava/lang/Float; = AxisY
  setAxisY(Ljava/lang/Float;)V = AxisY
  getAxisZ()Ljava/lang/Float; = AxisZ
  setAxisZ(Ljava/lang/Float;)V = AxisZ
  getName()Ljava/lang/String; = Name
  getStatus()Lcom/neuroid/tracker/callbacks/NIDSensorStatus; = Status
  setStatus(Lcom/neuroid/tracker/callbacks/NIDSensorStatus;)V = Status
  component1()Ljava/lang/String; = Component1()
  component2()Lcom/neuroid/tracker/callbacks/NIDSensorStatus; = Component2()
  component3()Ljava/lang/Float; = Component3()
  component4()Ljava/lang/Float; = Component4()
  component5()Ljava/lang/Float; = Component5()
  copy(Ljava/lang/String;Lcom/neuroid/tracker/callbacks/NIDSensorStatus;Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;)Lcom/neuroid/tracker/callbacks/NIDSensorData; = Copy(string, Com.Neuroid.Tracker.Callbacks.NIDSensorStatus, Java.Lang.Float, Java.Lang.Float, Java.Lang.Float)
com/neuroid/tracker/callbacks/NIDSensorGenListener = Com.Neuroid.Tracker.Callbacks.NIDSensorGenListener
  <init>(Lkotlin/jvm/functions/Function1;)V = .ctor(Kotlin.Jvm.Functions.IFunction1)
  getCallback()Lkotlin/jvm/functions/Function1; = Callback
  onAccuracyChanged(Landroid/hardware/Sensor;I)V = OnAccuracyChanged(Android.Hardware.Sensor, Android.Hardware.SensorStatus)
  onSensorChanged(Landroid/hardware/SensorEvent;)V = OnSensorChanged(Android.Hardware.SensorEvent)
com/neuroid/tracker/callbacks/NIDSensorHelper = Com.Neuroid.Tracker.Callbacks.NIDSensorHelper
  INSTANCE = Instance
  getValuesAccel()Lcom/neuroid/tracker/callbacks/NIDSensorData; = ValuesAccel
  getValuesGyro()Lcom/neuroid/tracker/callbacks/NIDSensorData; = ValuesGyro
  initSensorHelper(Landroid/content/Context;)V = InitSensorHelper(Android.Content.Context)
  restartSensors()V = RestartSensors()
  stopSensors()V = StopSensors()
com/neuroid/tracker/callbacks/NIDSensors = Com.Neuroid.Tracker.Callbacks.NIDSensors
  <init>()V = .ctor()
  <init>(Lcom/neuroid/tracker/callbacks/NIDSensorData;Lcom/neuroid/tracker/callbacks/NIDSensorData;)V = .ctor(Com.Neuroid.Tracker.Callbacks.NIDSensorData, Com.Neuroid.Tracker.Callbacks.NIDSensorData)
  getAccelerometer()Lcom/neuroid/tracker/callbacks/NIDSensorData; = Accelerometer
  setAccelerometer(Lcom/neuroid/tracker/callbacks/NIDSensorData;)V = Accelerometer
  getGyroscopeData()Lcom/neuroid/tracker/callbacks/NIDSensorData; = GyroscopeData
  setGyroscopeData(Lcom/neuroid/tracker/callbacks/NIDSensorData;)V = GyroscopeData
  component1()Lcom/neuroid/tracker/callbacks/NIDSensorData; = Component1()
  component2()Lcom/neuroid/tracker/callbacks/NIDSensorData; = Component2()
  copy(Lcom/neuroid/tracker/callbacks/NIDSensorData;Lcom/neuroid/tracker/callbacks/NIDSensorData;)Lcom/neuroid/tracker/callbacks/NIDSensors; = Copy(Com.Neuroid.Tracker.Callbacks.NIDSensorData, Com.Neuroid.Tracker.Callbacks.NIDSensorData)
com/neuroid/tracker/callbacks/NIDSensorStatus = Com.Neuroid.Tracker.Callbacks.NIDSensorStatus
  AVAILABLE = Available
  UNAVAILABLE = Unavailable
  valueOf(Ljava/lang/String;)Lcom/neuroid/tracker/callbacks/NIDSensorStatus; = ValueOf(string)
  values()[Lcom/neuroid/tracker/callbacks/NIDSensorStatus; = Values()
com/neuroid/tracker/events/NIDConstantsKt = Com.Neuroid.Tracker.Events.NIDConstantsKt
  ANDROID_URI = AndroidUri
  APPLICATION_SUBMIT = ApplicationSubmit
  APPLICATION_SUBMIT_FAILURE = ApplicationSubmitFailure
  APPLICATION_SUBMIT_SUCCESS = ApplicationSubmitSuccess
  BLUR = Blur
  CHANGE = Change
  CHECKBOX_CHANGE = CheckboxChange
  CLOSE_SESSION = CloseSession
  COPY = Copy
  CREATE_SESSION = CreateSession
  CUT = Cut
  DEVICE_MOTION = DeviceMotion
  ERROR = Error
  FOCUS = Focus
  FORM_RESET = FormReset
  FORM_SUBMIT = FormSubmit
  FORM_SUBMIT_FAILURE = FormSubmitFailure
  FORM_SUBMIT_SUCCESS = FormSubmitSuccess
  HEARTBEAT = Heartbeat
  INPUT = Input
  INPUT_CHANGE = InputChange
  INVALID = Invalid
  KEY_DOWN = KeyDown
  KEY_UP = KeyUp
  LOG = Log
  MUTATION_ATTR = MutationAttr
  MUTATION_INSERT = MutationInsert
  MUTATION_REMOVE = MutationRemove
  PAGE_SUBMIT = PageSubmit
  PASTE = Paste
  RADIO_CHANGE = RadioChange
  RATING_BAR_CHANGE = RatingBarChange
  REGISTER_COMPONENT = RegisterComponent
  REGISTER_STYLESHEET = RegisterStylesheet
  REGISTER_TARGET = RegisterTarget
  SELECT_CHANGE = SelectChange
  SET_USER_ID = SetUserId
  SLIDER_CHANGE = SliderChange
  SLIDER_SET_MAX = SliderSetMax
  SLIDER_SET_MIN = SliderSetMin
  SWITCH_CHANGE = SwitchChange
  TEXT_CHANGE = TextChange
  TOGGLE_BUTTON_CHANGE = ToggleButtonChange
  TOUCH_CANCEL = TouchCancel
  TOUCH_END = TouchEnd
  TOUCH_MOVE = TouchMove
  TOUCH_START = TouchStart
  USER_INACTIVE = UserInactive
  WINDOW_BLUR = WindowBlur
  WINDOW_FOCUS = WindowFocus
  WINDOW_LOAD = WindowLoad
  WINDOW_ORIENTATION_CHANGE = WindowOrientationChange
  WINDOW_RESIZE = WindowResize
  WINDOW_UNLOAD = WindowUnload
com/neuroid/tracker/events/NIDIdentifyAllViewsKt = Com.Neuroid.Tracker.Events.NIDIdentifyAllViewsKt
  identifyAllViews(Landroid/view/ViewGroup;Ljava/lang/String;ZZ)V = IdentifyAllViews(Android.Views.ViewGroup, string, bool, bool)
  identifyView(Landroid/view/View;Ljava/lang/String;ZZ)V = IdentifyView(Android.Views.View, string, bool, bool)
  registerComponent(Landroid/view/View;Ljava/lang/String;Ljava/lang/String;)V = RegisterComponent(Android.Views.View, string, string)
com/neuroid/tracker/events/NIDRegisterEventsHelperKt = Com.Neuroid.Tracker.Events.NIDRegisterEventsHelperKt
  registerTargetFromScreen(Landroid/app/Activity;ZZ)V = RegisterTargetFromScreen(Android.App.Activity, bool, bool)
  registerWindowListeners(Landroid/app/Activity;)V = RegisterWindowListeners(Android.App.Activity)
com/neuroid/tracker/events/NIDTouchEventManager = Com.Neuroid.Tracker.Events.NIDTouchEventManager
  <init>(Landroid/view/ViewGroup;)V = .ctor(Android.Views.ViewGroup)
  detectView(Landroid/view/MotionEvent;J)Landroid/view/View; = DetectView(Android.Views.MotionEvent, long)
com/neuroid/tracker/extensions/NIDTextExtensionsKt = Com.Neuroid.Tracker.Extensions.NIDTextExtensionsKt
  getSHA256(Ljava/lang/String;)Ljava/lang/String; = GetSHA256(string)
  getSHA256withSalt(Ljava/lang/String;)Ljava/lang/String; = GetSHA256withSalt(string)
com/neuroid/tracker/NeuroID = Com.Neuroid.Tracker.NeuroID
  <init>(Landroid/app/Application;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V = .ctor(Android.App.Application, string, Kotlin.Jvm.Internal.DefaultConstructorMarker)
  Companion = Companion
  ENDPOINT_PRODUCTION = EndpointProduction
  getEnvironment()Ljava/lang/String; = Environment
  setEnvironment(Ljava/lang/String;)V = Environment
  getFirstTS()J = FirstTS
  getForceStart()Ljava/lang/Boolean; = ForceStart
  isStopped()Z = IsStopped
  getSiteId()Ljava/lang/String; = SiteId
  setSiteId(Ljava/lang/String;)V = SiteId
  getTabId()Ljava/lang/String; = TabId
  captureEvent(Ljava/lang/String;Ljava/lang/String;)V = CaptureEvent(string, string)
  closeSession()V = CloseSession()
  configureWithOptions(Ljava/lang/String;Ljava/lang/String;)V = ConfigureWithOptions(string, string)
  excludeViewByResourceID(Ljava/lang/String;)V = ExcludeViewByResourceID(string)
  formSubmit()V = FormSubmit()
  formSubmitFailure()V = FormSubmitFailure()
  formSubmitSuccess()V = FormSubmitSuccess()
  getJsonPayLoad(Landroid/content/Context;)Ljava/lang/String; = GetJsonPayLoad(Android.Content.Context)
  registerTarget(Landroid/app/Activity;Landroid/view/View;Z)V = RegisterTarget(Android.App.Activity, Android.Views.View, bool)
  resetClientId()V = ResetClientId()
  resetJsonPayLoad()V = ResetJsonPayLoad()
  setForceStart(Landroid/app/Activity;)V = SetForceStart(Android.App.Activity)
  setNeuroIdInstance(Lcom/neuroid/tracker/NeuroID;)V = SetNeuroIdInstance(Com.Neuroid.Tracker.NeuroID)
  setScreenName(Ljava/lang/String;)V = SetScreenName(string)
  start()V = Start()
  stop()V = Stop()
com/neuroid/tracker/service/NIDJobServiceManager = Com.Neuroid.Tracker.Service.NIDJobServiceManager
  INSTANCE = Instance
  isStopped()Z = IsStopped
  isSendEventsNowEnabled()Z = SendEventsNowEnabled
  setSendEventsNowEnabled(Z)V = SendEventsNowEnabled
  getUserActive()Z = UserActive
  setUserActive(Z)V = UserActive
  restart()V = Restart()
  sendEventsNow(ZLkotlin/coroutines/Continuation;)Ljava/lang/Object; = SendEventsNow(bool, Kotlin.Coroutines.IContinuation)
  startJob(Landroid/app/Application;Ljava/lang/String;Ljava/lang/String;)V = StartJob(Android.App.Application, string, string)
  stopJob()V = StopJob()
com/neuroid/tracker/service/NIDServiceTracker = Com.Neuroid.Tracker.Service.NIDServiceTracker
  INSTANCE = Instance
  NID_ERROR_SERVICE = NidErrorService
  NID_OK_SERVICE = NidOkService
  getEnvironment()Ljava/lang/String; = Environment
  setEnvironment(Ljava/lang/String;)V = Environment
  getFirstScreenName()Ljava/lang/String; = FirstScreenName
  setFirstScreenName(Ljava/lang/String;)V = FirstScreenName
  getRegisteredViews()Ljava/util/Set; = RegisteredViews
  setRegisteredViews(Ljava/util/Set;)V = RegisteredViews
  getRndmId()Ljava/lang/String; = RndmId
  setRndmId(Ljava/lang/String;)V = RndmId
  getScreenActivityName()Ljava/lang/String; = ScreenActivityName
  setScreenActivityName(Ljava/lang/String;)V = ScreenActivityName
  getScreenFragName()Ljava/lang/String; = ScreenFragName
  setScreenFragName(Ljava/lang/String;)V = ScreenFragName
  getScreenName()Ljava/lang/String; = ScreenName
  setScreenName(Ljava/lang/String;)V = ScreenName
  getSiteId()Ljava/lang/String; = SiteId
  setSiteId(Ljava/lang/String;)V = SiteId
  getContentJson(Landroid/content/Context;Lorg/json/JSONArray;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = GetContentJson(Android.Content.Context, Org.Json.JSONArray, Kotlin.Coroutines.IContinuation)
  sendEventToServer(Ljava/lang/String;Ljava/lang/String;Landroid/app/Application;Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = SendEventToServer(string, string, Android.App.Application, System.Collections.Generic.ICollection<string>, Kotlin.Coroutines.IContinuation)
com/neuroid/tracker/storage/NIDDataStoreManagerKt = Com.Neuroid.Tracker.Storage.NIDDataStoreManagerKt
  initDataStoreCtx(Landroid/content/Context;)V = InitDataStoreCtx(Android.Content.Context)
com/neuroid/tracker/storage/NIDSharedPrefsDefaults = Com.Neuroid.Tracker.Storage.NIDSharedPrefsDefaults
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  Companion = Companion
  getClientId()Ljava/lang/String; = ClientId
  getDeviceId()Ljava/lang/String; = DeviceId
  getIntermediateId()Ljava/lang/String; = IntermediateId
  getLanguage()Ljava/lang/String; = Language
  getLocale()Ljava/lang/String; = Locale
  getNewSessionID()Ljava/lang/String; = NewSessionID
  getPlatform()Ljava/lang/String; = Platform
  getSessionID()Ljava/lang/String; = SessionID
  getTimeZone()I = TimeZone
  getUserAgent()Ljava/lang/String; = UserAgent
  getUserId()Ljava/lang/Object; = UserId
  generateUniqueHexId()Ljava/lang/String; = GenerateUniqueHexId()
  resetClientId()Ljava/lang/String; = ResetClientId()
  setUserId(Ljava/lang/String;)V = SetUserId(string)
com/neuroid/tracker/utils/JsonUtils = Com.Neuroid.Tracker.Utils.JsonUtils
  <init>()V = .ctor()
  Companion = Companion
com/neuroid/tracker/utils/NIDLog = Com.Neuroid.Tracker.Utils.NIDLog
  CHECK_BOX_CHANGE_TAG = CheckBoxChangeTag
  CHECK_BOX_ID = CheckBoxId
  INSTANCE = Instance
  RADIO_BUTTON_CHANGE_TAG = RadioButtonChangeTag
  RADIO_BUTTON_ID = RadioButtonId
  SLIDER_CHANGE_TAG = SliderChangeTag
  SLIDER_ID = SliderId
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
com/neuroid/tracker/utils/NIDMetaData = Com.Neuroid.Tracker.Utils.NIDMetaData
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  toJson()Lorg/json/JSONObject; = ToJson()
com/neuroid/tracker/utils/NIDSingletonIDs = Com.Neuroid.Tracker.Utils.NIDSingletonIDs
  INSTANCE = Instance
  getSalt()Ljava/lang/String; = Salt
  updateSalt()V = UpdateSalt()
com/neuroid/tracker/utils/NIDTextWatcher = Com.Neuroid.Tracker.Utils.NIDTextWatcher
  <init>(Ljava/lang/String;)V = .ctor(string)
  afterTextChanged(Landroid/text/Editable;)V = AfterTextChanged(Android.Text.IEditable)
  beforeTextChanged(Ljava/lang/CharSequence;III)V = BeforeTextChanged(Java.Lang.ICharSequence, int, int, int)
  onTextChanged(Ljava/lang/CharSequence;III)V = OnTextChanged(Java.Lang.ICharSequence, int, int, int)
com/neuroid/tracker/utils/NIDTimerActive = Com.Neuroid.Tracker.Utils.NIDTimerActive
  INSTANCE = Instance
  initTimer()V = InitTimer()
  restartTimerActive()V = RestartTimerActive()
com/neuroid/tracker/utils/NIDVersion = Com.Neuroid.Tracker.Utils.NIDVersion
  INSTANCE = Instance
  getInternalCurrentVersion()Ljava/lang/String; = InternalCurrentVersion
  getSDKVersion()Ljava/lang/String; = SDKVersion
com/neuroid/tracker/utils/NIDViewsExtensionsKt = Com.Neuroid.Tracker.Utils.NIDViewsExtensionsKt
  getIdOrTag(Landroid/view/View;)Ljava/lang/String; = GetIdOrTag(Android.Views.View)
  getParents(Landroid/view/View;)Ljava/lang/String; = GetParents(Android.Views.View)
  getRandomId(Landroid/view/View;)Ljava/lang/String; = GetRandomId(Android.Views.View)
com/neuroid/tracker/utils/RootHelper = Com.Neuroid.Tracker.Utils.RootHelper
  <init>()V = .ctor()
  BINARY_BUSYBOX = BinaryBusybox
  BINARY_SU = BinarySu
  isProbablyEmulator()Z = IsProbablyEmulator
  isRooted(Landroid/content/Context;)Z = IsRooted(Android.Content.Context)
com/neuroid/tracker/utils/UtilExtKt = Com.Neuroid.Tracker.Utils.UtilExtKt
  getGUID(Landroid/app/Activity;)Ljava/lang/String; = GetGUID(Android.App.Activity)
